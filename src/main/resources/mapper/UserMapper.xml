<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ngtesting.platform.dao.UserDao" >

    <select id="query" resultType="TstUser">
        SELECT * FROM TstUser usr

        JOIN TstOrgUserRelation r ON r.userId = usr.id

        WHERE TRUE
        <if test="keywords != null and keywords != ''">
            AND (
            usr.nickname LIKE CONCAT('%','${keywords}','%' )
            OR usr.email LIKE CONCAT('%','${keywords}','%' )
            OR usr.phone LIKE CONCAT('%','${keywords}','%' )
            )
        </if>
        <if test="disabled != null and disabled != ''">
            AND usr.disabled = #{disabled}
        </if>

        AND r.orgId = #{orgId}
        AND usr.deleted != TRUE
        AND usr.disabled != TRUE
        ORDER BY usr.id ASC
    </select>

    <select id="queryByUser" resultType="TstOrg">
        SELECT * FROM tstUser
    </select>

    <select id="get" parameterType="int" resultType="TstUser">
        SELECT * FROM TstUser WHERE id = #{id}
    </select>

    <select id="getByEmail" parameterType="string" resultType="TstUser">
        SELECT * FROM TstUser WHERE email = #{email}
        AND disabled != TRUE AND deleted != TRUE
        LIMIT 1;
    </select>
    <select id="getByEmailAndPassword" resultType="TstUser">
        SELECT * FROM TstUser WHERE email = #{email} AND password=#{password} LIMIT 1;
    </select>

    <select id="getByToken" resultType="TstUser">
        SELECT * FROM TstUser WHERE token = #{token}
        AND disabled != TRUE AND deleted != TRUE
        LIMIT 1;
    </select>
    <select id="getByPhone" resultType="TstUser">
        SELECT * FROM TstUser WHERE phone = #{phone}
        AND disabled != TRUE AND deleted != TRUE
        LIMIT 1;
    </select>

    <insert id="save" parameterType="TstUser" useGeneratedKeys="true" keyProperty="id">
        insert into TstUser (email,password,nickname,phone,avatar,token,
          leftSizeCase,leftSizeIssue,defaultOrgId,defaultOrgName,defaultPrjId,defaultPrjName,
          deleted,disabled,createTime)
        values (#{email},#{password},#{nickname},#{phone},#{avatar},#{token},
          #{leftSizeCase},#{leftSizeIssue},#{defaultOrgId},#{defaultOrgName},#{defaultPrjId},#{defaultPrjName},
          #{deleted},#{disabled},#{createTime})
    </insert>

    <update id="setDefaultOrg">
        UPDATE TstUser
        SET defaultOrgId=#{orgId}, defaultOrgName=#{orgName}
        WHERE id=#{id}
    </update>
    <update id="setDefaultPrj">
        UPDATE TstUser
        SET defaultPrjId=#{prjId}, defaultPrjName=#{prjName}
        WHERE id=#{id}
    </update>

    <select id="search" resultType="TstUser">
        SELECT * FROM TstUser usr

        JOIN TstOrgUserRelation r ON r.orgId = #{orgId} AND r.userId = usr.id

        WHERE TRUE
        <if test="keywords != null and keywords != ''">
            AND (
              usr.nickname LIKE CONCAT('%','${keywords}','%' )
              OR usr.email LIKE CONCAT('%','${keywords}','%' )
              OR usr.phone LIKE CONCAT('%','${keywords}','%' )
            )
        </if>
        <if test="exceptIds != null and exceptIds != ''">
            AND usr.id NOT IN #{exceptIds}
        </if>

        AND usr.deleted != TRUE
        AND usr.disabled != TRUE
        ORDER BY usr.id ASC
    </select>

<!--    <sql id="BASE_COLUMN">
        userId,email,password,name,phone,avatar,token,leftSizeCase,leftSizeIssue,
        defaultOrgId,defaultPrjId,
    </sql>

    <resultMap id="UserResult" type="TstUser">
        <id property="id" column="id" />
        <result property="email" column="email" />
        <result property="password" column="password" />
    </resultMap>

    <select id="select" resultType="TstUser"> &lt;!&ndash; resultMap="UserResult" &ndash;&gt;
        SELECT
        <include refid="BASE_COLUMN"/>
        FROM tstUser
    </select>-->

</mapper>
